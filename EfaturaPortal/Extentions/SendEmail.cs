using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Net;
using System.Net.Mail;
using System.Text;
using EfaturaPortal.Application.Interfaces.Email;

namespace EfaturaPortal.Extentions
{
    public class SendEmail : ISendEmail
    {
        public async  Task<Boolean> Send(string to, string subject, string message, string name,string Password, string template)
        {

            var content = Encoding.UTF8.GetString(Convert.FromBase64String(emailtemplate(template)));

           
            content = content.Replace("[UserName]", name);
            content = content.Replace("[Password]", Password);
            content = content.Replace("[Link]", "https://www.alzeteknoloji.com");

            //if (template != "newcontact") content = content.Replace("[sifre]", message); else content = content.Replace("[mesaj]", message);
            //content = content.Replace("[tarih]", DateTime.Now.ToString("dd.MM.yyyy"));

            var LoginInfo = new NetworkCredential("ali@goktas.net", "68+68+Ysmn");
            var client = new SmtpClient { Port = 587, Host = "smtp.gmail.com", EnableSsl = true, Credentials = LoginInfo };

            var mail = new MailMessage
            {
                From = new MailAddress("info@goktas.net", subject),
                Subject = subject,
                Body = content,
                IsBodyHtml = true
            };

            mail.To.Add(to);  // Gidecek adres ekleniyor

            try
            {
                client.Send(mail);
                return true;
            }
            catch (Exception ex)
            {

                return false;

               
            }

        }

        string emailtemplate(string typemail)
        {
            switch (typemail)
            {
                case "IlkKayit":

                    return "";


                case "ResetPassword":

                    return "";
            }

            return "";
        }
    }
}
